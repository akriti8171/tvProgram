{"version":3,"sources":["shows/showsList.js","shows/showDetail.js","header/index.js","App.js","reportWebVitals.js","index.js"],"names":["ShowsList","useState","searchValue","setSearchValue","showsList","setShowsList","loading","setLoading","navigate","useNavigate","error","setError","getEpisodesData","search","a","axios","get","response","data","tempShows","console","log","forEach","item","RegExp","test","name","toLowerCase","push","useEffect","length","style","height","className","type","placeholder","value","onChange","e","target","trim","onClick","disabled","map","src","image","original","alt","id","dangerouslySetInnerHTML","__html","summary","ShowDetail","useParams","show","setShow","inclusiveFields","capitalizeFirstLetter","string","charAt","toUpperCase","slice","getText","join","Object","entries","index","key","includes","Fragment","network","country","rating","average","schedule","days","time","Header","App","path","exact","element","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b37296b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport \"./style.css\"\nimport axios from \"axios\"\nimport { useNavigate } from \"react-router-dom\"\n\nconst ShowsList = () => {\n  const [searchValue, setSearchValue] = useState(\"\")\n  const [showsList, setShowsList] = useState([])\n  const [loading, setLoading] = useState(true)\n  const navigate = useNavigate()\n  const [error, setError] = useState(false)\n\n  const getEpisodesData = async (search) => {\n    setLoading(true)\n    try {\n      const response = await axios.get(`https://api.tvmaze.com/shows`)\n      if (response.data) {\n        setLoading(false)\n        let tempShows = []\n        if (search) {\n          console.log(\"searching\")\n          response.data.forEach((item) => {\n            if (new RegExp(search, \"gi\").test(item.name.toLowerCase())) {\n              tempShows.push(item)\n            }\n          })\n          console.log(`tempShows`, tempShows)\n        } else tempShows = response.data\n\n        setShowsList(tempShows)\n      }\n    } catch (error) {\n      setError(true)\n    }\n  }\n\n  useEffect(() => {\n    getEpisodesData(\"\")\n  }, [])\n\n  useEffect(() => {\n    if (searchValue && searchValue.length <= 8) {\n      getEpisodesData(searchValue)\n    }\n  }, [searchValue])\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <div className=\"searchbox\">\n        <input\n          type=\"text\"\n          className={`searchBoxInput ${searchValue.length > 9 ? \"error\" : \"\"}`}\n          placeholder=\"Search shows...\"\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value.trim())}\n        />\n\n        <button\n          className=\"searchClearButton\"\n          onClick={() => {\n            setSearchValue(\"\")\n            getEpisodesData(\"\")\n          }}\n          disabled={loading}\n        >\n          Clear\n        </button>\n      </div>\n      {searchValue.length > 8 && (\n        <center className=\"errorText\">\n          search text should not be more than 8 characters\n        </center>\n      )}\n      <div className=\"cardContainer\">\n        {showsList.map((item) => {\n          return (\n            <div className=\"card\" key={item.id}>\n              <div className=\"cardHeader\">\n                <img src={item.image.original} alt={item.image.name} />\n              </div>\n              <div className=\"cardBody\">\n                <div\n                  className=\"cardTitle\"\n                  onClick={() => navigate(`/shows/${item.id}`)}\n                >\n                  {\" \"}\n                  {item.name}\n                </div>\n                <div\n                  className=\"cardContent\"\n                  dangerouslySetInnerHTML={{ __html: item.summary }}\n                />\n              </div>\n            </div>\n          )\n        })}\n        {loading && <div className=\"dataLoading\">Loading...</div>}\n        {error && (\n          <div className=\"dataLoading\">\n            Something went Wrong.Please Try Again\n          </div>\n        )}\n      </div>\n      {showsList.length <= 0 && !loading && (\n        <div className=\"noData\">\n          <img src=\"/nodata.png\" alt=\"nodata\" />\n          <div className=\"noDataTitle\">No Data</div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ShowsList\n","import React, { useState, useEffect } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport axios from \"axios\"\nimport \"./style.css\"\n\nconst ShowDetail = () => {\n  const { id } = useParams()\n  const [loading, setLoading] = useState(true)\n  const [show, setShow] = useState({})\n  const navigate = useNavigate()\n  const inclusiveFields = [\"genres\", \"language\", \"status\", \"language\"]\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const getText = (value) => {\n    switch (typeof value) {\n      case \"object\": {\n        return value.join(\" , \")\n      }\n\n      default: {\n        return capitalizeFirstLetter(value)\n      }\n    }\n  }\n\n  useEffect(() => {\n    ;(async () => {\n      try {\n        setLoading(true)\n        const response = await axios.get(`https://api.tvmaze.com/shows/${id}`)\n        console.log(`response`, response)\n        if (response.data) {\n          setLoading(false)\n          setShow(response.data)\n        }\n      } catch (error) {\n        navigate(\"/shows\")\n      }\n    })()\n  }, [id, navigate])\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      {loading && <div className=\"dataLoading\">Loading...</div>}\n      <button\n        className=\"goBackButton\"\n        onClick={() => navigate(\"/shows\")}\n        disabled={loading}\n      >\n        Go Back\n      </button>\n      <div className=\"gridContainer\">\n        <div className=\"gridItem_1\">\n          <img src={show.image?.original} alt={show.name} />\n        </div>\n        <div className=\"gridItem_2\">\n          <center className=\"movieTitle\">\n            <b>{show.name}</b>\n          </center>\n          {Object.entries(show).map(([key, value], index) => {\n            if (inclusiveFields.includes(key)) {\n              return (\n                <div className=\"info\" key={index}>\n                  {capitalizeFirstLetter(key)} : {getText(value)}\n                </div>\n              )\n            } else {\n              return <React.Fragment key={index} />\n            }\n          })}\n          {!loading && (\n            <div className=\"info\">\n              {\" \"}\n              Country : {show.network?.country?.name}{\" \"}\n            </div>\n          )}\n          {!loading && (\n            <div className=\"info\"> Ratings : {show.rating?.average} </div>\n          )}\n          {show.schedule?.days && (\n            <div className=\"info\">\n              {\" \"}\n              Program Schedule Days: {show.schedule?.days.join(\" , \")}{\" \"}\n            </div>\n          )}\n          {show.schedule?.time && (\n            <div className=\"info\">\n              {\" \"}\n              Program Schedule Time : {show.schedule?.time}{\" \"}\n            </div>\n          )}\n          <div\n            className=\"info\"\n            dangerouslySetInnerHTML={{ __html: show.summary }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ShowDetail\n","import React from 'react'\r\nimport \"./style.css\"\r\nconst Header = () => {\r\n  \r\n    return (\r\n        <header className='header fixed'>\r\n            Tv Shows\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import './App.css';\nimport {   BrowserRouter as Router,Routes,Route,Navigate } from 'react-router-dom';\nimport ShowsList from './shows/showsList';\nimport ShowDetail from './shows/showDetail';\nimport Header from './header';\nconst App=()=>{\n\n  return (\n      <Router>\n          <Header />\n          <Routes>\n            <Route path=\"/shows\" exact element={<ShowsList />}/>\n            <Route path=\"/shows/:id\" exact element={<ShowDetail />}/>\n            <Route path=\"/\" element={<Navigate to=\"/shows\" />}/>\n            <Route path=\"*\" element={<Navigate to=\"/shows\" />} />\n          </Routes>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}